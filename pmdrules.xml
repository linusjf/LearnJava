<?xml version="1.0" encoding="utf-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="quickstart"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

  <description>Quickstart configuration of PMD. Includes the rules
  that are most likely to apply everywhere.</description>
  <rule ref="category/java/bestpractices.xml/DoubleBraceInitialization" />
  <rule ref="category/java/bestpractices.xml/UseStandardCharsets" />
  <rule ref="category/java/bestpractices.xml/PrimitiveWrapperInstantiation" />
  <rule ref="category/java/bestpractices.xml/JUnit5TestShouldBePackagePrivate" />
  <rule ref="category/java/bestpractices.xml/SimplifiableTestAssertion" />
  <rule ref="category/java/bestpractices.xml/SystemPrintln">
    <properties>
      <property name="violationSuppressXPath"
                value="./ancestor::MethodDeclaration[@MainMethod = 'true']" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/AbstractClassWithoutAbstractMethod" />
  <rule ref="category/java/bestpractices.xml/AccessorClassGeneration" />
  <rule ref="category/java/bestpractices.xml/AccessorMethodGeneration" />
  <rule ref="category/java/bestpractices.xml/ArrayIsStoredDirectly" />
  <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace" />
  <rule ref="category/java/bestpractices.xml/AvoidReassigningLoopVariables">

    <properties>
      <property name="foreachReassign"
                value="deny" />
      <property name="forReassign"
                value="deny" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/AvoidMessageDigestField" />
  <rule ref="category/java/bestpractices.xml/AvoidReassigningParameters" />
  <rule ref="category/java/bestpractices.xml/AvoidStringBufferField" />
  <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP" />
  <rule ref="category/java/bestpractices.xml/CheckResultSet" />
  <rule ref="category/java/bestpractices.xml/ConstantsInInterface" />
  <rule ref="category/java/bestpractices.xml/DefaultLabelNotLastInSwitchStmt" />
  <rule ref="category/java/bestpractices.xml/ForLoopCanBeForeach" />
  <rule ref="category/java/bestpractices.xml/ForLoopVariableCount" />
  <rule ref="category/java/bestpractices.xml/GuardLogStatement" />
  <rule ref="category/java/bestpractices.xml/JUnit4SuitesShouldUseSuiteAnnotation" />
  <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseAfterAnnotation" />
  <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseBeforeAnnotation" />
  <rule ref="category/java/bestpractices.xml/JUnit4TestShouldUseTestAnnotation" />
  <rule ref="category/java/bestpractices.xml/JUnitAssertionsShouldIncludeMessage" />
  <rule ref="category/java/bestpractices.xml/JUnitTestContainsTooManyAsserts">

    <properties>
      <property name="maximumAsserts"
                value="5" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/JUnitTestsShouldIncludeAssert" />
  <rule ref="category/java/bestpractices.xml/JUnitUseExpected" />
  <rule ref="category/java/bestpractices.xml/LooseCoupling">
    <properties>
      <property name="allowedTypes"
                value="java.util.Properties" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/MethodReturnsInternalArray" />
  <rule ref="category/java/bestpractices.xml/MissingOverride" />
  <rule ref="category/java/bestpractices.xml/OneDeclarationPerLine">

    <properties>
      <property name="strictMode"
                value="false" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/LiteralsFirstInComparisons" />
  <rule ref="category/java/bestpractices.xml/PreserveStackTrace" />
  <rule ref="category/java/bestpractices.xml/ReplaceEnumerationWithIterator" />
  <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap" />
  <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList" />
  <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />
  <rule ref="category/java/bestpractices.xml/UnusedFormalParameter">

    <properties>
      <property name="checkAll"
                value="true" />
      <property name="violationSuppressXPath"
                value="./ancestor::MethodDeclaration[contains(@Name, 'main')]" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/UnusedLocalVariable" />
  <rule ref="category/java/bestpractices.xml/UnusedPrivateField">
    <properties>
    <property name="ignoredFieldNames"
              value="serialVersionUID|serialPersistentFields" />"
              /&gt;
    <property name="reportForAnnotations"
              value="" /></properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/UnusedPrivateMethod">
    <properties>
      <property name="ignoredAnnotations"
                value="java.lang.Deprecated" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />
  <rule ref="category/java/bestpractices.xml/UseTryWithResources">
    <properties>
      <property name="closeMethods"
                value="close,closeQuietly" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/UseVarargs" />
  <rule ref="category/java/bestpractices.xml/WhileLoopWithLiteralBoolean" />
  <rule ref="category/java/bestpractices.xml/UnusedAssignment">
    <properties>
      <property name="checkUnusedPrefixIncrement"
                value="true" />
      <property name="reportUnusedVariables"
                value="false" />
      <property name="violationSuppressXPath"
                value="./ancestor::MethodDeclaration[contains(@Name, 'main')]" />
    </properties>
  </rule>
  <rule ref="category/java/bestpractices.xml/AvoidReassigningCatchVariables" />
  <!-- NAMING CONVENTIONS -->
  <rule ref="category/java/codestyle.xml/EmptyControlStatement" />
  <rule ref="category/java/codestyle.xml/UnnecessarySemicolon" />
  <rule ref="category/java/codestyle.xml/UnnecessaryImport" />
  <rule ref="category/java/codestyle.xml/FinalParameterInAbstractMethod" />
  <rule ref="category/java/codestyle.xml/ClassNamingConventions">
    <properties>
      <property name="classPattern"
                value="[A-Z][a-zA-Z0-9]*" />
      <property name="abstractClassPattern"
                value="[A-Z][a-zA-Z0-9]*" />
      <property name="interfacePattern"
                value="[A-Z][a-zA-Z0-9]*" />
      <property name="enumPattern"
                value="[A-Z][a-zA-Z0-9]*" />
      <property name="annotationPattern"
                value="[A-Z][a-zA-Z0-9]*" />
      <property name="utilityClassPattern"
                value="[A-Z][a-zA-Z0-9]+(Utils?|Helper|Constants)" />
      <property name="testClassPattern"
                value="^Test.*$|^[A-Z][a-zA-Z0-9]*Test(s|Case)?$" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/FieldNamingConventions" />
  <rule ref="category/java/codestyle.xml/FormalParameterNamingConventions" />
  <rule ref="category/java/codestyle.xml/GenericsNaming" />
  <rule ref="category/java/codestyle.xml/LinguisticNaming">
    <properties>
      <property name="ignoredAnnotations"
                value="java.lang.Override" />
      <property name="checkBooleanMethod"
                value="true" />
      <property name="checkGetters"
                value="true" />
      <property name="checkSetters"
                value="true" />
      <property name="checkPrefixedTransformMethods"
                value="true" />
      <property name="checkTransformMethods"
                value="false" />
      <property name="booleanMethodPrefixes"
                value="is|has|can|have|will|should" />
      <property name="transformMethodNames"
                value="to|as" />
      <property name="checkFields"
                value="true" />
      <property name="checkVariables"
                value="true" />
      <property name="booleanFieldPrefixes"
                value="is|has|can|have|will|should" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/LocalVariableNamingConventions" />
  <rule ref="category/java/codestyle.xml/LongVariable">
    <properties>
      <property name="minimum"
                value="50" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/MethodNamingConventions">
    <properties>
      <property name="methodPattern"
                value="[a-z][a-zA-Z0-9]*" />
      <property name="staticPattern"
                value="[a-z][a-zA-Z0-9]*" />
      <property name="nativePattern"
                value="[a-z][a-zA-Z0-9]*" />
      <property name="junit3TestPattern"
                value="test[A-Z0-9][a-zA-Z0-9]*" />
      <property name="junit4TestPattern"
                value="[a-z][a-zA-Z0-9]*" />
      <property name="junit5TestPattern"
                value="[a-z][a-zA-Z0-9]*" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/PackageCase" />
  <rule ref="category/java/codestyle.xml/ShortClassName">
    <properties>
      <property name="minimum"
                value="3" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/ShortMethodName">
    <properties>
      <property name="minimum"
                value="2" />
    </properties>
  </rule>
  <!-- <rule ref="category/java/codestyle.xml/ShortVariable" /> -->
  <!-- <rule ref="category/java/codestyle.xml/LocalHomeNamingConvention" /> -->
  <!-- <rule ref="category/java/codestyle.xml/LocalInterfaceSessionNamingConvention" /> -->
  <!-- <rule ref="category/java/codestyle.xml/MDBAndSessionBeanNamingConvention" /> -->
  <!-- <rule ref="category/java/codestyle.xml/RemoteInterfaceNamingConvention" /> -->
  <!-- <rule ref="category/java/codestyle.xml/RemoteSessionInterfaceNamingConvention" /> -->
  <!-- OTHER -->
  <!--  <rule ref="category/java/codestyle.xml/AtLeastOneConstructor"/> -->
  <rule ref="category/java/codestyle.xml/AvoidDollarSigns" />
  <rule ref="category/java/codestyle.xml/AvoidProtectedFieldInFinalClass" />
  <rule ref="category/java/codestyle.xml/AvoidProtectedMethodInFinalClassNotExtending" />
  <rule ref="category/java/codestyle.xml/AvoidUsingNativeCode" />
  <rule ref="category/java/codestyle.xml/BooleanGetMethodName" />
  <!--  <rule ref="category/java/codestyle.xml/CallSuperInConstructor" /> -->
  <!--  <rule ref="category/java/codestyle.xml/CommentDefaultAccessModifier">
    <properties>
        <property name="ignoredAnnotations" value="com.google.common.annotations.VisibleForTesting|android.support.annotation.VisibleForTesting" />
        <property name="regex" value="[/][*]\s+(default|package)\s+[*][/]" />
        <property name="checkTopLevelTypes" value="false" />
    </properties>
  </rule> -->
  <rule ref="category/java/codestyle.xml/ConfusingTernary" />
  <rule ref="category/java/codestyle.xml/ControlStatementBraces">
    <properties>
      <property name="checkIfElseStmt"
                value="false" />
      <property name="checkSingleIfStmt"
                value="false" />
      <property name="checkWhileStmt"
                value="false" />
      <property name="checkForStmt"
                value="false" />
      <property name="checkDoWhileStmt"
                value="false" />
      <property name="checkCaseStmt"
                value="false" />
      <property name="allowEmptyLoop"
                value="false" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
  <rule ref="category/java/codestyle.xml/ExtendsObject" />
  <rule ref="category/java/codestyle.xml/FieldDeclarationsShouldBeAtStartOfClass" />
  <rule ref="category/java/codestyle.xml/ForLoopShouldBeWhileLoop" />
  <rule ref="category/java/codestyle.xml/IdenticalCatchBranches" />
  <!-- <rule ref="category/java/codestyle.xml/LocalVariableCouldBeFinal" /> -->
  <!-- <rule ref="category/java/codestyle.xml/MethodArgumentCouldBeFinal" /> -->
  <rule ref="category/java/codestyle.xml/NoPackage" />
  <rule ref="category/java/codestyle.xml/UseUnderscoresInNumericLiterals" />
  <!-- <rule ref="category/java/codestyle.xml/OnlyOneReturn" /> -->
  <rule ref="category/java/codestyle.xml/PrematureDeclaration" />
  <rule ref="category/java/codestyle.xml/TooManyStaticImports">
    <properties>
      <property name="maximumStaticImports"
                value="10" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryAnnotationValueElement" />
  <rule ref="category/java/codestyle.xml/UnnecessaryFullyQualifiedName">

    <properties>
      <property name="reportStaticMethods"
                value="true" />
      <property name="reportStaticFields"
                value="true" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UnnecessaryBoxing" />
  <rule ref="category/java/codestyle.xml/UnnecessaryCast" />
  <rule ref="category/java/codestyle.xml/UnnecessaryLocalBeforeReturn" />
  <rule ref="category/java/codestyle.xml/UnnecessaryModifier" />
  <rule ref="category/java/codestyle.xml/UnnecessaryReturn" />
  <rule ref="category/java/codestyle.xml/UseDiamondOperator" />
  <rule ref="category/java/codestyle.xml/UselessParentheses">
    <properties>
      <property name="ignoreClarifying"
                value="true" />
      <property name="ignoreBalancing"
                value="true" />
    </properties>
  </rule>
  <rule ref="category/java/codestyle.xml/UselessQualifiedThis" />
  <rule ref="category/java/codestyle.xml/UnnecessaryConstructor">
    <properties>
      <property name="ignoredAnnotations"
                value="javax.inject.Inject" />
    </properties>
  </rule>
  <!-- Design -->
  <rule ref="category/java/design.xml/InvalidJavaBean">
    <properties>
      <property name="ensureSerialization"
                value="false" />
      <property name="packages"
                value="org.example.beans" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/CognitiveComplexity" />
  <rule ref="category/java/design.xml/MutableStaticState" />
  <rule ref="category/java/design.xml/AbstractClassWithoutAnyMethod" />
  <rule ref="category/java/design.xml/AvoidCatchingGenericException" />
  <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts" />
  <rule ref="category/java/design.xml/AvoidRethrowingException" />
  <rule ref="category/java/design.xml/AvoidThrowingNewInstanceOfSameException" />
  <rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />
  <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes" />
  <rule ref="category/java/design.xml/AvoidUncheckedExceptionsInSignatures" />
  <rule ref="category/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
  <rule ref="category/java/design.xml/CollapsibleIfStatements" />
  <rule ref="category/java/design.xml/CouplingBetweenObjects" />
  <rule ref="category/java/design.xml/CyclomaticComplexity">
    <properties>
      <property name="classReportLevel"
                value="80" />
      <property name="methodReportLevel"
                value="10" />
      <property name="cycloOptions"
                value="" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/DataClass" />
  <rule ref="category/java/design.xml/DoNotExtendJavaLangError" />
  <rule ref="category/java/design.xml/ExceptionAsFlowControl" />
  <rule ref="category/java/design.xml/ExcessiveImports" />
  <rule ref="category/java/design.xml/ExcessiveParameterList" />
  <rule ref="category/java/design.xml/ExcessivePublicCount" />
  <rule ref="category/java/design.xml/FinalFieldCouldBeStatic" />
  <rule ref="category/java/design.xml/GodClass" />
  <rule ref="category/java/design.xml/ImmutableField" />
  <rule ref="category/java/design.xml/LawOfDemeter">
    <properties>
      <property name="trustRadius"
                value="1" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/LogicInversion" />
  <!--  <rule ref="category/java/design.xml/LoosePackageCoupling">
    <properties>
        <property name="packages" value="" />
        <property name="classes" value="" />
    </properties>
  </rule> -->
  <rule ref="category/java/design.xml/NcssCount" />
  <rule ref="category/java/design.xml/NPathComplexity">
    <properties>
      <property name="reportLevel"
                value="200" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/SignatureDeclareThrowsException" />
  <rule ref="category/java/design.xml/SimplifiedTernary" />
  <rule ref="category/java/design.xml/SimplifyBooleanExpressions" />
  <rule ref="category/java/design.xml/SimplifyBooleanReturns" />
  <rule ref="category/java/design.xml/SimplifyConditional" />
  <rule ref="category/java/design.xml/SingularField">
    <properties>
      <property name="ignoredAnnotations"
                value="java.lang.Deprecated|javafx.fxml.FXML|lombok.Getter|lombok.Setter|lombok.experimental.Delegate" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/SwitchDensity" />
  <rule ref="category/java/design.xml/TooManyFields" />
  <rule ref="category/java/design.xml/TooManyMethods">
    <properties>
      <property name="maxmethods"
                value="30" />
      <property name="violationSuppressXPath"
                value="./ancestor::ClassOrInterfaceDeclaration[matches(@Image, '^.*Test$')]" />
    </properties>
  </rule>
  <rule ref="category/java/design.xml/UselessOverridingMethod" />
  <rule ref="category/java/design.xml/UseObjectForClearerAPI" />
  <rule ref="category/java/design.xml/UseUtilityClass" />
  <rule ref="category/java/documentation.xml/CommentContent">
    <properties>
      <property name="forbiddenRegex"
                value="idiot|jerk" />
    </properties>
  </rule>
  <!--
<rule ref="category/java/documentation.xml/CommentRequired">
    <properties>
        <property name="methodWithOverrideCommentRequirement" value="Ignored" />
        <property name="accessorCommentRequirement" value="Ignored" />
        <property name="classCommentRequirement" value="Required" />
        <property name="fieldCommentRequirement" value="Required" />
        <property name="publicMethodCommentRequirement" value="Required" />
        <property name="protectedMethodCommentRequirement" value="Required" />
        <property name="enumCommentRequirement" value="Required" />
        <property name="serialVersionUIDCommentRequired" value="Ignored" />
        <property name="serialPersistentFieldsCommentRequired" value="Ignored" />
    </properties>
</rule>
      -->
  <!-- Documentation -->
  <rule ref="category/java/documentation.xml/CommentSize">
    <properties>
      <property name="maxLines"
                value="6" />
      <property name="maxLineLength"
                value="80" />
    </properties>
  </rule>
  <rule ref="category/java/documentation.xml/UncommentedEmptyConstructor" />
  <rule ref="category/java/documentation.xml/UncommentedEmptyMethodBody" />
  <!-- Errorprone -->
  <rule ref="category/xml/errorprone.xml/MistypedCDATASection" />
  <rule ref="category/pom/errorprone.xml/InvalidDependencyTypes">
    <properties>
      <property name="validTypes"
                value="pom,jar,maven-plugin,ejb,war,ear,rar,par" />
    </properties>
  </rule>
  <rule ref="category/pom/errorprone.xml/ProjectVersionAsDependencyVersion" />
  <rule ref="category/java/errorprone.xml/ReturnEmptyCollectionRatherThanNull" />
  <rule ref="category/java/errorprone.xml/ImplicitSwitchFallThrough" />
  <rule ref="category/java/errorprone.xml/AssignmentInOperand">
    <properties>
      <property name="allowIf"
                value="false" />
      <property name="allowFor"
                value="false" />
      <property name="allowWhile"
                value="true" />
      <property name="allowIncrementDecrement"
                value="true" />
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/AssignmentToNonFinalStatic" />
  <rule ref="category/java/errorprone.xml/AvoidAccessibilityAlteration" />
  <rule ref="category/java/errorprone.xml/AvoidAssertAsIdentifier" />
  <rule ref="category/java/errorprone.xml/AvoidBranchingStatementAsLastInLoop" />
  <rule ref="category/java/errorprone.xml/AvoidCallingFinalize" />
  <rule ref="category/java/errorprone.xml/AvoidCatchingNPE" />
  <rule ref="category/java/errorprone.xml/AvoidCatchingThrowable" />
  <rule ref="category/java/errorprone.xml/AvoidDecimalLiteralsInBigDecimalConstructor" />
  <rule ref="category/java/errorprone.xml/AvoidDuplicateLiterals">
    <properties>
      <property name="maxDuplicateLiterals"
                value="4" />
      <property name="minimumLength"
                value="3" />
      <property name="skipAnnotations"
                value="false" />
      <property name="exceptionList"
                value="" />
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidEnumAsIdentifier" />
  <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingMethodName" />
  <rule ref="category/java/errorprone.xml/AvoidFieldNameMatchingTypeName" />
  <rule ref="category/java/errorprone.xml/AvoidInstanceofChecksInCatchClause" />
  <rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition">

    <properties>
      <property name="ignoreMagicNumbers"
                value="-1,0,1" />
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation" />
  <rule ref="category/java/errorprone.xml/AvoidMultipleUnaryOperators" />
  <rule ref="category/java/errorprone.xml/AvoidUsingOctalValues" />
  <rule ref="category/java/errorprone.xml/ComparisonWithNaN" />
  <rule ref="category/java/errorprone.xml/NonSerializableClass">
    <properties>
      <property name="checkAbstractTypes"
                value="false" />
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/BrokenNullCheck" />
  <rule ref="category/java/errorprone.xml/CallSuperFirst" />
  <rule ref="category/java/errorprone.xml/CallSuperLast" />
  <rule ref="category/java/errorprone.xml/CheckSkipResult" />
  <rule ref="category/java/errorprone.xml/ClassCastExceptionWithToArray" />
  <rule ref="category/java/errorprone.xml/CloneMethodMustBePublic" />
  <rule ref="category/java/errorprone.xml/CloneMethodMustImplementCloneable" />
  <rule ref="category/java/errorprone.xml/CloneMethodReturnTypeMustMatchClassName" />
  <rule ref="category/java/errorprone.xml/CloseResource">
    <properties>
      <property name="closeTargets"
                value="close" />
      <property name="types"
                value="java.sql.Connection,java.sql.Statement,java.sql.ResultSet" />
      <property name="closeAsDefaultTarget"
                value="true" />
      <property name="allowedResourceTypes"
                value="java.io.ByteArrayOutputStream | java.io.ByteArrayInputStream | java.io.StringWriter | java.io.CharArrayWriter | java.util.stream.Stream | java.util.stream.IntStream | java.util.stream.LongStream | java.util.stream.DoubleStream" />
      <property name="closeNotInFinally"
                value="true" />
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals">

    <properties>
      <property name="typesThatCompareByReference"
                value="java.lang.Enum,java.lang.Class" />
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/ConstructorCallsOverridableMethod" />
  <rule ref="category/java/errorprone.xml/DetachedTestCase" />
  <rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly" />
  <rule ref="category/java/errorprone.xml/DoNotTerminateVM" />
  <rule ref="category/java/errorprone.xml/DoNotExtendJavaLangThrowable" />
  <rule ref="category/java/errorprone.xml/DoNotHardCodeSDCard" />
  <rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally" />
  <rule ref="category/java/errorprone.xml/DontImportSun" />
  <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices" />
  <rule ref="category/java/errorprone.xml/EqualsNull" />
  <rule ref="category/java/errorprone.xml/FinalizeDoesNotCallSuperFinalize" />
  <rule ref="category/java/errorprone.xml/FinalizeOnlyCallsSuperFinalize" />
  <rule ref="category/java/errorprone.xml/FinalizeOverloaded" />
  <rule ref="category/java/errorprone.xml/FinalizeShouldBeProtected" />
  <rule ref="category/java/errorprone.xml/IdempotentOperations" />
  <rule ref="category/java/errorprone.xml/InstantiationToGetClass" />
  <rule ref="category/java/errorprone.xml/InvalidLogMessageFormat" />
  <rule ref="category/java/errorprone.xml/JumbledIncrementer" />
  <rule ref="category/java/errorprone.xml/JUnitSpelling" />
  <rule ref="category/java/errorprone.xml/JUnitStaticSuite" />
  <rule ref="category/java/errorprone.xml/MethodWithSameNameAsEnclosingClass" />
  <rule ref="category/java/errorprone.xml/MisplacedNullCheck" />
  <rule ref="category/java/errorprone.xml/MissingSerialVersionUID" />
  <rule ref="category/java/errorprone.xml/MissingStaticMethodInNonInstantiatableClass" />
  <rule ref="category/java/errorprone.xml/MoreThanOneLogger" />
  <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement" />
  <rule ref="category/java/errorprone.xml/NonStaticInitializer" />
  <rule ref="category/java/errorprone.xml/NullAssignment" />
  <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />
  <rule ref="category/java/errorprone.xml/ProperCloneImplementation" />
  <rule ref="category/java/errorprone.xml/ProperLogger">
    <properties>
      <property name="staticLoggerName"
                value="LOG" />
      <property name="loggerName"
                value="log" />
      <property name="loggerClass"
                value="Log" />
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock" />
  <rule ref="category/java/errorprone.xml/SimpleDateFormatNeedsLocale" />
  <rule ref="category/java/errorprone.xml/SingleMethodSingleton" />
  <rule ref="category/java/errorprone.xml/SingletonClassReturningNewInstance" />
  <rule ref="category/java/errorprone.xml/StaticEJBFieldShouldBeFinal" />
  <rule ref="category/java/errorprone.xml/StringBufferInstantiationWithChar" />
  <rule ref="category/java/errorprone.xml/SuspiciousEqualsMethodName" />
  <rule ref="category/java/errorprone.xml/SuspiciousHashcodeMethodName" />
  <rule ref="category/java/errorprone.xml/SuspiciousOctalEscape" />
  <rule ref="category/java/errorprone.xml/TestClassWithoutTestCases" />
  <rule ref="category/java/errorprone.xml/UnconditionalIfStatement" />
  <rule ref="category/java/errorprone.xml/UnnecessaryBooleanAssertion" />
  <rule ref="category/java/errorprone.xml/UnnecessaryCaseChange" />
  <rule ref="category/java/errorprone.xml/UnnecessaryConversionTemporary" />
  <rule ref="category/java/errorprone.xml/UnusedNullCheckInEquals" />
  <rule ref="category/java/errorprone.xml/UseCorrectExceptionLogging" />
  <rule ref="category/java/errorprone.xml/UseEqualsToCompareStrings" />
  <rule ref="category/java/errorprone.xml/UselessOperationOnImmutable" />
  <rule ref="category/java/errorprone.xml/UseLocaleWithCaseConversions" />
  <rule ref="category/java/errorprone.xml/UseProperClassLoader" />
  <!-- Empty rules -->
  <rule ref="category/java/errorprone.xml/EmptyCatchBlock">
    <properties>
      <property name="allowCommentedBlocks"
                value="false" />
      <property name="allowExceptionNameRegex"
                value="^(ignored|expected)$" />
    </properties>
  </rule>
  <rule ref="category/java/errorprone.xml/EmptyFinalizer" />
  <rule ref="category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel" />
  <rule ref="category/java/multithreading.xml/AvoidThreadGroup" />
  <rule ref="category/java/multithreading.xml/AvoidUsingVolatile" />
  <!--  <rule ref="category/java/multithreading.xml/DoNotUseThreads" /> -->
  <rule ref="category/java/multithreading.xml/DontCallThreadRun" />
  <rule ref="category/java/multithreading.xml/DoubleCheckedLocking" />
  <rule ref="category/java/multithreading.xml/NonThreadSafeSingleton" />
  <rule ref="category/java/multithreading.xml/UnsynchronizedStaticFormatter" />
  <rule ref="category/java/multithreading.xml/UseConcurrentHashMap" />
  <rule ref="category/java/multithreading.xml/UseNotifyAllInsteadOfNotify" />
  <rule ref="category/java/performance.xml/AddEmptyString" />
  <rule ref="category/java/performance.xml/AppendCharacterWithChar" />
  <rule ref="category/java/performance.xml/AvoidArrayLoops" />
  <rule ref="category/java/performance.xml/AvoidFileStream" />
  <rule ref="category/java/performance.xml/AvoidInstantiatingObjectsInLoops" />
  <rule ref="category/java/performance.xml/BigIntegerInstantiation" />
  <rule ref="category/java/performance.xml/ConsecutiveAppendsShouldReuse" />
  <rule ref="category/java/performance.xml/ConsecutiveLiteralAppends" />
  <rule ref="category/java/performance.xml/InefficientEmptyStringCheck" />
  <rule ref="category/java/performance.xml/InefficientStringBuffering" />
  <rule ref="category/java/performance.xml/InsufficientStringBufferDeclaration" />
  <rule ref="category/java/performance.xml/OptimizableToArrayCall" />
  <rule ref="category/java/performance.xml/RedundantFieldInitializer" />
  <rule ref="category/java/performance.xml/StringInstantiation" />
  <rule ref="category/java/performance.xml/StringToString" />
  <rule ref="category/java/performance.xml/TooFewBranchesForASwitchStatement" />
  <rule ref="category/java/performance.xml/UseArrayListInsteadOfVector" />
  <rule ref="category/java/performance.xml/UseArraysAsList" />
  <rule ref="category/java/performance.xml/UseIndexOfChar" />
  <rule ref="category/java/performance.xml/UselessStringValueOf" />
  <rule ref="category/java/performance.xml/UseStringBufferForStringAppends" />
  <rule ref="category/java/performance.xml/UseStringBufferLength" />
  <rule ref="category/java/performance.xml/AvoidCalendarDateCreation" />
  <rule ref="category/java/performance.xml/UseIOStreamsWithApacheCommonsFileItem" />
  <rule ref="category/java/security.xml/HardCodedCryptoKey" />
  <rule ref="category/java/security.xml/InsecureCryptoIv" />
  <!-- JSP/html -->
  <rule ref="category/jsp/bestpractices.xml/DontNestJsfInJstlIteration" />
  <rule ref="category/jsp/bestpractices.xml/NoJspForward" />
  <rule ref="category/jsp/bestpractices.xml/NoHtmlComments" />
  <rule ref="category/jsp/bestpractices.xml/NoClassAttribute" />
  <rule ref="category/jsp/codestyle.xml/DuplicateJspImports" />
  <rule ref="category/jsp/design.xml/NoScriptlets" />
  <rule ref="category/jsp/design.xml/NoInlineScript" />
  <rule ref="category/jsp/design.xml/NoInlineStyleInformation" />
  <rule ref="category/jsp/design.xml/NoLongScripts" />
  <rule ref="category/jsp/errorprone.xml/JspEncoding" />
  <rule ref="category/jsp/security.xml/IframeMissingSrcAttribute" />
  <rule ref="category/jsp/security.xml/NoUnsanitizedJSPExpression" />
  <rule ref="category/html/bestpractices.xml/AvoidInlineStyles" />
  <rule ref="category/html/bestpractices.xml/UseAltAttributeForImages" />
  <rule ref="category/html/bestpractices.xml/UnnecessaryTypeAttribute" />
</ruleset>
