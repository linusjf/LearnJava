#!/usr/bin/env bash
require() {
hash "$@" || exit 127;
}
require curl java sleep pgrep parallel awk wget 
if ! [ -f beesting.jpg ]; then
  curl --silent -o beesting.jpg https://upload.wikimedia.org/wikipedia/commons/3/3a/Bee-sting-abeille-dard-2.jpg
fi
if ! [ -f cuckoo.wav ]; then
  curl --silent -o cuckoo.wav http://bruitages.free.fr/horloges/6_coucous.wav
fi
java -cp . networking.MediaServer &
echo "Sleeping for 5 seconds again after MediaServer start..."
sleep 5
java -cp . networking.MediaClient < mediacommands.txt
java -cp . networking.MediaClient < mediacommands1.txt
echo "Killing MediaServer in 5 seconds..."
sleep 5
pgrep -an \
  'networking.MediaServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.PersonnelServer &
echo "Sleeping for 5 seconds again after PersonnelServer start..."
sleep 5
java -cp . networking.PersonnelClient
echo "Killing PersonnelServer in 5 seconds..."
sleep 5
pgrep -an \
  'networking.PersonnelServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.MultiEchoServerNIO &
echo "Sleeping for 5 seconds again after MultiEchoServerNIO start..."
sleep 5
java -cp . networking.TCPEchoClient < TCPEcho.txt &
java -cp . networking.MultiEchoClient < MultiEcho.txt &
java -cp . networking.TCPEchoClient < TCPEcho.txt &
java -cp . networking.MultiEchoClient < MultiEcho.txt &
echo "Killing MultiEchoServerNIO in 5 seconds..."
sleep 5
pgrep -an \
  'networking.MultiEchoServerNIO' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.DaytimeServer &
echo "Sleeping for 5 seconds again after DaytimeServer start..."
sleep 5
echo "Running DayTimeClient to port 1313"
java -cp . networking.DayTimeClient localhost 1313
echo "Killing DaytimeServer..."
pgrep -an \
  'networking.DaytimeServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.TimeServer &
echo "Sleeping for 5 seconds again after TimeServer start..."
sleep 5
echo "Running Time to port 3737"
java -cp . networking.Time localhost 3737
echo "Killing TimeServer..."
pgrep -an \
  'networking.TimeServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.MultithreadedDaytimeServer &
echo "Sleeping for 5 seconds again after MultithreadedDaytimeServer start..."
sleep 5
echo "Running DayTimeClient to port 1331"
java -cp . networking.DayTimeClient localhost 1331
echo "Killing MultithreadedDaytimeServer..."
pgrep -an \
  'networking.MultithreadedDaytimeServer' | 
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.PooledDaytimeServer &
echo "Sleeping for 5 seconds again after PooledDaytimeServer start..."
sleep 5
echo "Running DayTimeClient to port 3131"
java -cp . networking.DayTimeClient localhost 3131
echo "Killing PooledDaytimeServer..."
pgrep -an \
  'networking.PooledDaytimeServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
echo "Running SocketEchoServer to port 9999"
java -cp . networking.SocketEchoServer &
echo "Sleeping for 5 seconds again after SocketEchoServer start..."
sleep 5
echo "Running EchoClient to port 9999"
java -cp . networking.EchoClient localhost 9999 < echo.txt
echo "Killing SocketEchoServer..."
pgrep -an \
  'networking.SocketEchoServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
echo "Running EchoServer to port 7777"
java -cp . networking.EchoServer 7777 &
echo "Sleeping for 5 seconds again after EchoServer start..."
sleep 5
echo "Running Non-blocking EchoClient to port 7777"
sleep 5
echo "Hmm..no output??? I guess I'll have to write one now...."
echo "Killing EchoServer..."
pgrep -an \
  'networking.EchoServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
echo "Running RandomPort at well...random port..."
java -cp . networking.RandomPort &
echo "Sleeping for 5 seconds again after RandomPort server start..."
sleep 5
echo "Killing RandomPort..."
pgrep -an \
  'networking.RandomPort' | \
  awk '{print $2}' \
  | parallel -I% kill %
echo $?
java -Djava.util.logging.config.file=logging.properties -cp . networking.LoggingDaytimeServer 4141 &
echo "Sleeping for 5 seconds again after LoggingDaytimeServer start..."
sleep 5
echo "Running DayTimeClient to port 4141"
java -cp . networking.DayTimeClient localhost 4141
echo "Killing LoggingDaytimeServer..."
pgrep -an \
  'networking.LoggingDaytimeServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -Djava.util.logging.config.file=logging.properties -cp . networking.SingleFileHttpServer web.log 8080 &
echo "Sleeping for 5 seconds again after SingleFileHttpServer start..."
sleep 5
echo "Running curl to port 8080"
curl --url http://localhost:8080
echo "Killing SingleFileHttpServer..."
pgrep -an \
  'networking.SingleFileHttpServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -Djava.util.logging.config.file=logging.properties -cp . networking.Redirector http://www.maketimeforsports.com/ 8081 &
echo "Sleeping for 5 seconds again after Redirector start..."
sleep 5
echo "Running curl to port 8081"
curl --url http://localhost:8081
echo "Killing Redirector..."
pgrep -an \
  'networking.Redirector' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -Djava.util.logging.config.file=logging.properties -cp . networking.JHttp . 8082 &
echo "Sleeping for 5 seconds again after JHttp start..."
sleep 5
echo "Running curl to port 8082"
curl --url http://localhost:8082/web.log
echo "Running curl head request to port 8082"
curl -v -I http://localhost:8082/web.log
echo "Running wget head request to port 8082"
wget -S --spider http://localhost:8082/web.log
echo "Killing JHttp..."
pgrep -an \
  'networking.JHttp' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.SecureOrderTaker &
echo "Sleeping for 5 seconds again after SecureOrderTaker start..."
sleep 5
echo "Running SecureOrderPlacer to port 7000"
java -cp . networking.SecureOrderPlacer
echo "Killing SecureOrderTaker..."
pgrep -an \
  'networking.SecureOrderTaker' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -Djavax.net.ssl.keyStore=serverkeystore.jks \
  -Djavax.net.ssl.keyStorePassword=password \
  -Djavax.net.ssl.trustStore=servertruststore.jks \
  -Djavax.net.ssl.trustStorePassword=password \
  -cp . networking.MainClass &
echo "Sleeping for 5 seconds again after MainClass start..."
sleep 5
echo "Running SocketClientDemo to port 5432"
java -Djavax.net.ssl.keyStore=clientkeystore.jks \
	-Djavax.net.ssl.keyStorePassword=password \
	-Djavax.net.ssl.trustStore=clienttruststore.jks \
	-Djavax.net.ssl.trustStorePassword=password \
	-cp . networking.SocketClientDemo
echo "Killing MainClass..."
pgrep -an \
  'networking.MainClass' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.ServerEcho 7007 &
echo "Sleeping for 5 seconds again after ServerEcho start..."
sleep 5
java -cp . networking.ClientEcho 7007 < echo.txt
echo "Killing ServerEcho..."
pgrep -an \
  'networking.ServerEcho' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.ChargenServer 1991 &
echo "Sleeping for 5 seconds again after ChargenServer start..."
sleep 5
java -cp . networking.ChargenClient localhost 1991 > chargen.out &
echo "Running ChargenClient for 0.1 seconds only..."
sleep 0.1
pgrep -an \
  'networking.ChargenClient' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
echo "Killing ChargenServer..."
pgrep -an \
  'networking.ChargenServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.SocketServerExample &
echo "Running SocketServerExample for 5 seconds only..."
sleep 5
pgrep -an \
  'networking.SocketServerExample' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.IntgenServer &
echo "Sleeping for 5 seconds again after IntgenServer start..."
sleep 5
java -cp . networking.IntgenClient localhost > intgen.out &
echo "Running IntgenClient for 0.1 seconds only..."
sleep 0.1
pgrep -an \
  'networking.IntgenClient' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
echo "Killing IntgenServer..."
pgrep -an \
  'networking.IntgenServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.NonblockingSingleFileHttpServer build.xml 8084 &
echo "Sleeping for 5 seconds again after NonblockingSingleFileHttpServer start..."
sleep 5
curl -v http://localhost:8084/
pgrep -an \
  'networking.NonblockingSingleFileHttpServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.DaytimeUDPServer &
echo "Sleeping for 5 seconds again after DaytimeUDPServer start..."
sleep 5
java -cp . networking.DaytimeUDPClient localhost 1313
echo "Killing DaytimeUDPServer..."
pgrep -an \
  'networking.DaytimeUDPServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.UDPDiscardServer 9999 &
echo "Sleeping for 5 seconds again after UDPDiscardServer start..."
sleep 5
java -cp . networking.UDPDiscardClient localhost 9999 < UDPEcho.txt
echo "Killing UDPDiscardServer..."
pgrep -an \
  'networking.UDPDiscardServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.FastUDPDiscardServer 9999 &
echo "Sleeping for 5 seconds again after UDPFastDiscardServer start..."
sleep 5
java -cp . networking.UDPEchoClient localhost 9999 < UDPEcho.txt
echo "Killing FastUDPDiscardServer..."
pgrep -an \
  'networking.FastUDPDiscardServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.UDPEchoServer 7777 &
echo "Sleeping for 5 seconds again after UDPEchoServer start..."
sleep 5
java -cp . networking.UDPEchoClient localhost 7777 < UDPEcho.txt
echo "Killing UDPEchoServer..."
pgrep -an \
  'networking.UDPEchoServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.UDPDiscardServerWithChannels 9999 &
echo "Sleeping for 5 seconds again after UDPDiscardServerWithChannels start..."
sleep 5
java -cp . networking.UDPEchoClientWithChannels localhost 9999
echo "Killing UDPDiscardServerWithChannels..."
pgrep -an \
  'networking.UDPDiscardServerWithChannels' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.UDPEchoServerWithChannels 7777 &
echo "Sleeping for 5 seconds again after UDPEchoServerWithChannels start..."
sleep 5
java -cp . networking.UDPEchoClientWithChannels localhost 7777
echo "Killing UDPEchoServerWithChannels..."
pgrep -an \
  'networking.UDPEchoServerWithChannels' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.MulticastSniffer 239.255.255.250 1900 &
echo "Sleeping for 5 seconds again after MulticastSniffer start..."
sleep 5
java -cp . networking.MulticastSender all-systems.mcast.net 4000 
echo "Wait  for 30 seconds again after MulticastSender..."
sleep 30
echo "Killing MulticastSniffer..."
pgrep -an  \
  'networking.MulticastSniffer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.TCPEchoServer &
echo "Sleeping for 5 seconds again after TCPEchoServer start..."
sleep 5
java -cp . networking.TCPEchoClient < TCPEcho.txt 
echo "Killing TCPEchoServer..."
pgrep -an \
  'networking.TCPEchoServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.EmailServer &
echo "Sleeping for 5 seconds again after EmailServer start..."
sleep 5
java -cp . networking.EmailClient < Dave.txt 
java -cp . networking.EmailClient < Karen.txt
echo "Killing EmailServer..."
pgrep -an \
  'networking.EmailServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.MultiEchoServer &
echo "Sleeping for 5 seconds again after MultiEchoServer start..."
sleep 5
java -cp . networking.MultiEchoClient < MultiEcho.txt
echo "Killing MultiEchoServer..."
pgrep -an \
  'networking.MultiEchoServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
java -cp . networking.ResourceServer &
echo "Sleeping for 5 seconds again after ResourceServer start..."
sleep 5
java -cp . networking.ConsumerClient < MultiOne.txt
echo "Killing ResourceServer..."
pgrep -an \
  'networking.ResourceServer' | \
  awk '{print $1}' \
  | parallel -I% kill %
echo $?
