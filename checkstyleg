#!/usr/bin/env bash
usage()
{
  echo "Usage: $0 dir rulesfile"
  echo "dir - Project directory"
  echo "rulesfile - Rules file"
  exit 1
}

readOptions()
{
  [ -e "$proj"/"$optionsFile" ] && \
      { readarray -t options < <(cat "$proj"/"$optionsFile") || \
      echo "Unable to read $proj/$optionsFile";}
}

readExclusions()
{
  [ -e "$proj"/"$exclusionsFile" ] && \
      { readarray -t exclusions < <(cat "$proj"/"$exclusionsFile") || \
      echo "Unable to read $proj/$exclusionsFile";}
}

require() {
hash "$@" || exit 127
}
require java realpath cat find mv

if [ "$#" -lt 1 ] || ! [ -d "$1" ]; 
then
  usage
fi

proj=$1
declare -i ret=0
declare -r optionsFile=".csoptions"
declare -r exclusionsFile=".exclusions"
declare -r suppressionsFile="suppressions-xpath.xml"
declare -a options
rules_file=$(realpath "csrules.xml")
# shellcheck disable=SC2155
declare -r properties_file="$(realpath 'checkstyle.properties')"
# shellcheck disable=SC2155
declare -r classpathFile="$(realpath 'cs.cp')"
# shellcheck disable=SC2155
declare -r classpath="$(cat "$classpathFile")"
mainClass="com.puppycrawl.tools.checkstyle.Main"
echo "$1"
if [ -n "$2" ]
  then
    rules_file="$(realpath "$2")"
fi
if [ ! -e "$rules_file" ]
  then
    echo "$rules_file cannot be found."
    usage
fi

if [ ! -e "$classpathFile" ]
  then
    echo "$classpathFile cannot be found. Run ant in root directory to generate file."
    usage
fi

if [ ! -e "$properties_file" ]
  then
    echo "$properties_file not found. Creating..."
    touch "$properties_file" || \
      echo "Unable to create $properties_file"
    echo "Create/Modify $properties_file to configure checkstyle"
fi

readOptions
readExclusions
(set -o pipefail; cd "$1" && \
readarray -t args \
  < <(find . -type f -name "*.java" \
  "${exclusions[@]}" \
  -not -path "./docs" -not -path "./dist") && \
  find . -maxdepth 1 -name "$suppressionsFile" -type f -exec mv {} {}.bak \; && \
  java -cp "$classpath" \
  "$mainClass" \
  "${options[@]}" \
  -c "$rules_file" -d \
  -p "$properties_file" \
  -o "$1"-xpath.xml -g \
  "${args[@]}";)
ret=$?
if [ -s "$1"/"$1"-xpath.xml ]
then
  mv "$1"/"$1"-xpath.xml "$1"/"$suppressionsFile"
  ret="$ret"+"$?"
fi
exit "$ret"
